name: Build and Package

on:
  push:
    branches: [ main ]
    paths-ignore:
    - '**.md'
    - 'LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - '**.md'
    - 'LICENSE'

env:
  APP_VERSION: "0.1-${{ github.run_id }}"

jobs:
  compute-app-version:
    runs-on: ubuntu-latest
    steps:
    - name: app_version
      run: echo "::set-output name=app_version::0.1-$GITHUB_RUN_ID"
    outputs:
      app_version: ${{ steps.app_version.outputs.app_version }}
  build-and-package:
    needs: compute-app-version
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: debug
      run: "echo app version: ${{ needs.compute-app-version.outputs.app_version }}"
    - name: dotnet publish
      run: dotnet publish --self-contained -r win-x64 -f net5.0 -c release /p:Version=${{ needs.compute-app-version.outputs.app_version }}

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: bin\Release\net5.0\win-x64\publish\**

    - name: Package
      run: cd choco && choco pack --version ${{ needs.compute-app-version.outputs.app_version }}

    - name: Upload nupkg
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: choco/*.nupkg
  publish:
    if: github.ref == 'refs/heads/main'
    needs: build-and-package
    runs-on: windows-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: nupkg
      - name: publish to chocolatey community feed
        env:
          PUSH_URL: ${{ secrets.PUSH_URL }}
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          $nupkgs = Get-ChildItem . *.nupkg
          foreach ($pkg in $nupkgs) {
            Write-Host "Pushing: $($pkg.FullName) ..."
            choco push "$($pkg.FullName)" -s "$env:PUSH_URL" -k "$env:API_KEY"
          }
  create-release:
    needs: 
    - build-and-package
    - compute-app-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: bin
      - name: Push new tag
        uses: negz/create-tag@v1
        with:
          version: ${{ needs.compute-app-version.outputs.app_version }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: 'bin/**'
          tag_name: ${{ needs.compute-app-version.outputs.app_version }}
          prerelease: ${{ github.ref != 'refs/heads/main'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
